// <auto-generated />
using System;
using CoreAxis.Modules.MLMModule.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreAxis.Modules.MLMModule.Infrastructure.Migrations
{
    [DbContext(typeof(MLMModuleDbContext))]
    partial class MLMModuleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("mlm")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoreAxis.Modules.MLMModule.Domain.Entities.CommissionLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommissionRuleSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FixedAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaxAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("MinAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(5,4)");

                    b.HasKey("Id");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_CommissionLevels_IsActive");

                    b.HasIndex("CommissionRuleSetId", "Level")
                        .IsUnique()
                        .HasDatabaseName("IX_CommissionLevels_RuleSetId_Level");

                    b.ToTable("CommissionLevels", "mlm");
                });

            modelBuilder.Entity("CoreAxis.Modules.MLMModule.Domain.Entities.CommissionRuleSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("LatestVersion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("MaxLevels")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10);

                    b.Property<decimal>("MinimumPurchaseAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,6)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("RequireActiveUpline")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IX_CommissionRuleSets_Code");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_CommissionRuleSets_IsActive");

                    b.HasIndex("IsDefault")
                        .HasDatabaseName("IX_CommissionRuleSets_IsDefault");

                    b.ToTable("CommissionRuleSets", "mlm");
                });

            modelBuilder.Entity("CoreAxis.Modules.MLMModule.Domain.Entities.CommissionRuleVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PublishedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("RuleSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SchemaJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsPublished")
                        .HasDatabaseName("IX_CommissionRuleVersions_IsPublished");

                    b.HasIndex("PublishedAt")
                        .HasDatabaseName("IX_CommissionRuleVersions_PublishedAt");

                    b.HasIndex("RuleSetId", "Version")
                        .IsUnique()
                        .HasDatabaseName("IX_CommissionRuleVersions_RuleSetId_Version");

                    b.ToTable("CommissionRuleVersions", "mlm");
                });

            modelBuilder.Entity("CoreAxis.Modules.MLMModule.Domain.Entities.CommissionTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("ApprovalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CommissionRuleSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CorrelationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSettled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(5,4)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("RejectedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RejectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectionNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleSetCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RuleVersion")
                        .HasColumnType("int");

                    b.Property<decimal>("SourceAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid>("SourcePaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WalletTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CommissionRuleSetId");

                    b.HasIndex("CreatedOn")
                        .HasDatabaseName("IX_CommissionTransaction_CreatedOn");

                    b.HasIndex("SourcePaymentId")
                        .HasDatabaseName("IX_CommissionTransaction_SourcePaymentId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_CommissionTransaction_Status");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_CommissionTransaction_UserId");

                    b.HasIndex("SourcePaymentId", "UserId")
                        .HasDatabaseName("IX_CommissionTransaction_SourcePaymentId_UserId");

                    b.HasIndex("Status", "CreatedOn")
                        .HasDatabaseName("IX_CommissionTransaction_Status_CreatedOn");

                    b.HasIndex("UserId", "Status")
                        .HasDatabaseName("IX_CommissionTransaction_UserId_Status");

                    b.ToTable("CommissionTransactions", "mlm");
                });

            modelBuilder.Entity("CoreAxis.Modules.MLMModule.Domain.Entities.ProductRuleBinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommissionRuleSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CommissionRuleSetId")
                        .HasDatabaseName("IX_ProductRuleBindings_CommissionRuleSetId");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_ProductRuleBindings_IsActive");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("IX_ProductRuleBindings_ProductId");

                    b.HasIndex("ProductId", "CommissionRuleSetId")
                        .HasDatabaseName("IX_ProductRuleBindings_ProductId_RuleSetId");

                    b.HasIndex("ValidFrom", "ValidTo")
                        .HasDatabaseName("IX_ProductRuleBindings_ValidPeriod");

                    b.ToTable("ProductRuleBindings", "mlm");
                });

            modelBuilder.Entity("CoreAxis.Modules.MLMModule.Domain.Entities.UserReferral", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ActivatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeactivatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("MaterializedPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ReferralCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentUserId")
                        .HasDatabaseName("IX_UserReferrals_ParentUserId");

                    b.HasIndex("Path")
                        .HasDatabaseName("IX_UserReferrals_Path");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("IX_UserReferrals_UserId");

                    b.HasIndex("Level", "IsActive")
                        .HasDatabaseName("IX_UserReferrals_Level_IsActive");

                    b.ToTable("UserReferrals", "mlm");
                });

            modelBuilder.Entity("CoreAxis.SharedKernel.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CausationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Error")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxRetries")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(3);

                    b.Property<DateTime?>("NextRetryAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OccurredOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProcessedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("RetryCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("default");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("OccurredOn")
                        .HasDatabaseName("IX_OutboxMessages_OccurredOn");

                    b.HasIndex("Type")
                        .HasDatabaseName("IX_OutboxMessages_Type");

                    b.HasIndex("ProcessedOn", "NextRetryAt")
                        .HasDatabaseName("IX_OutboxMessages_Processing");

                    b.ToTable("OutboxMessages", "mlm");
                });

            modelBuilder.Entity("CoreAxis.Modules.MLMModule.Domain.Entities.CommissionLevel", b =>
                {
                    b.HasOne("CoreAxis.Modules.MLMModule.Domain.Entities.CommissionRuleSet", "CommissionRuleSet")
                        .WithMany("CommissionLevels")
                        .HasForeignKey("CommissionRuleSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommissionRuleSet");
                });

            modelBuilder.Entity("CoreAxis.Modules.MLMModule.Domain.Entities.CommissionRuleVersion", b =>
                {
                    b.HasOne("CoreAxis.Modules.MLMModule.Domain.Entities.CommissionRuleSet", "RuleSet")
                        .WithMany("Versions")
                        .HasForeignKey("RuleSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RuleSet");
                });

            modelBuilder.Entity("CoreAxis.Modules.MLMModule.Domain.Entities.CommissionTransaction", b =>
                {
                    b.HasOne("CoreAxis.Modules.MLMModule.Domain.Entities.CommissionRuleSet", "CommissionRuleSet")
                        .WithMany()
                        .HasForeignKey("CommissionRuleSetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreAxis.Modules.MLMModule.Domain.Entities.UserReferral", "UserReferral")
                        .WithMany("EarnedCommissions")
                        .HasForeignKey("UserId")
                        .HasPrincipalKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommissionRuleSet");

                    b.Navigation("UserReferral");
                });

            modelBuilder.Entity("CoreAxis.Modules.MLMModule.Domain.Entities.ProductRuleBinding", b =>
                {
                    b.HasOne("CoreAxis.Modules.MLMModule.Domain.Entities.CommissionRuleSet", "CommissionRuleSet")
                        .WithMany("ProductBindings")
                        .HasForeignKey("CommissionRuleSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommissionRuleSet");
                });

            modelBuilder.Entity("CoreAxis.Modules.MLMModule.Domain.Entities.UserReferral", b =>
                {
                    b.HasOne("CoreAxis.Modules.MLMModule.Domain.Entities.UserReferral", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("CoreAxis.Modules.MLMModule.Domain.Entities.CommissionRuleSet", b =>
                {
                    b.Navigation("CommissionLevels");

                    b.Navigation("ProductBindings");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("CoreAxis.Modules.MLMModule.Domain.Entities.UserReferral", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("EarnedCommissions");
                });
#pragma warning restore 612, 618
        }
    }
}
